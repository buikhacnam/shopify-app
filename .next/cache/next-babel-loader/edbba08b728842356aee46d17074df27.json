{"ast":null,"code":"import _taggedTemplateLiteral from \"D:/Host/lovecamp/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery getProducts($ids: [ID!]!) {\\n    nodes(ids: $ids) {\\n        ... on Product {\\n            title\\n            handle\\n            images(first: 1) {\\n                edges {\\n                    node {\\n                        originalSrc\\n                        altText\\n                    }\\n                }\\n            }\\n            variants(first: 1) {\\n                edges {\\n                    node {\\n                        price\\n                        id\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@apollo/react-hooks';\nimport store from 'store-js';\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());\n\nfunction ProductList() {\n  _s();\n\n  var _useQuery = useQuery(GET_PRODUCTS_BY_ID, {\n    variables: {\n      ids: store.get('ids')\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return /*#__PURE__*/_jsx(\"div\", {\n    children: \"Loading...\"\n  });\n  if (error) return /*#__PURE__*/_jsx(\"div\", {\n    children: error.message\n  });\n  console.log('data:', data);\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: /*#__PURE__*/_jsx(\"h1\", {\n      children: \"Hello from Productlist\"\n    })\n  });\n}\n\n_s(ProductList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductList;\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["D:/Host/lovecamp/component/ProductList.js"],"names":["gql","useQuery","Card","ResourceList","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_ID","ProductList","variables","ids","get","loading","error","data","message","console","log"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,KAA7B,EAAoCC,SAApC,EAA+CC,SAA/C,QAAgE,qBAAhE;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,IAAMC,kBAAkB,GAAGR,GAAH,mBAAxB;;AA2BA,SAASS,WAAT,GAAuB;AAAA;;AAAA,kBAEcR,QAAQ,CAACO,kBAAD,EAAqB;AAAEE,IAAAA,SAAS,EAAE;AAAEC,MAAAA,GAAG,EAAEJ,KAAK,CAACK,GAAN,CAAU,KAAV;AAAP;AAAb,GAArB,CAFtB;AAAA,MAEXC,OAFW,aAEXA,OAFW;AAAA,MAEFC,KAFE,aAEFA,KAFE;AAAA,MAEKC,IAFL,aAEKA,IAFL;;AAInB,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA,cAAMA,KAAK,CAACE;AAAZ,IAAP;AAEXC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,IAArB;AACA,sBACI;AAAA,2BACI;AAAA;AAAA;AADJ,IADJ;AAKH;;GAbQN,W;UAE4BR,Q;;;KAF5BQ,W;AAeT,eAAeA,WAAf","sourcesContent":["import gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@apollo/react-hooks';\r\nimport store from 'store-js';\r\n\r\nconst GET_PRODUCTS_BY_ID = gql`\r\nquery getProducts($ids: [ID!]!) {\r\n    nodes(ids: $ids) {\r\n        ... on Product {\r\n            title\r\n            handle\r\n            images(first: 1) {\r\n                edges {\r\n                    node {\r\n                        originalSrc\r\n                        altText\r\n                    }\r\n                }\r\n            }\r\n            variants(first: 1) {\r\n                edges {\r\n                    node {\r\n                        price\r\n                        id\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n`;\r\n\r\nfunction ProductList() {\r\n    \r\n    const { loading, error, data } = useQuery(GET_PRODUCTS_BY_ID, { variables: { ids: store.get('ids')}})\r\n\r\n    if (loading) return <div>Loading...</div>\r\n    if (error) return <div>{error.message}</div>\r\n\r\n    console.log('data:', data)\r\n    return (\r\n        <div>\r\n            <h1>Hello from Productlist</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductList;"]},"metadata":{},"sourceType":"module"}