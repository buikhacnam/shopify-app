{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nconst GET_PRODUCTS_BY_ID = gql`\nquery getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n        ... on Product {\n            title\n            handle\n          \tid\n            images(first: 1) {\n                edges {\n                    node {\n                        originalSrc\n                        altText\n                    }\n                }\n            }\n            variants(first: 1) {\n                edges {\n                    node {\n                        price\n                        id\n                    }\n                }\n            }\n        }\n    }\n}\n\n`;\n\nfunction ProductList() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_PRODUCTS_BY_ID, {\n    variables: {\n      ids: store.get('ids')\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsx(\"div\", {\n    children: \"Loading...\"\n  });\n  if (error) return /*#__PURE__*/_jsx(\"div\", {\n    children: error.message\n  });\n  console.log('data:', data);\n  return /*#__PURE__*/_jsx(Card, {\n    children: /*#__PURE__*/_jsx(ResourceList, {\n      showHeader: true,\n      resourceName: {\n        singular: \"Product\",\n        plural: \"Products\"\n      },\n      items: data.nodes,\n      renderItem: item => {\n        const media = /*#__PURE__*/_jsx(Thumbnail, {\n          source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : \"\",\n          alt: item.images.edges[0] ? item.images.edges[0].altText : \"\"\n        });\n\n        const price = item.variants.edges[0].node.price;\n        return /*#__PURE__*/_jsx(ResourceList.Item, {\n          id: item.id,\n          media: media,\n          accessibilityLabel: `View details for ${item.title}`,\n          children: /*#__PURE__*/_jsxs(Stack, {\n            children: [/*#__PURE__*/_jsx(Stack.Item, {\n              fill: true,\n              children: /*#__PURE__*/_jsx(\"h3\", {\n                children: /*#__PURE__*/_jsx(TextStyle, {\n                  variation: \"strong\",\n                  children: item.title\n                })\n              })\n            }), /*#__PURE__*/_jsx(Stack.Item, {\n              children: /*#__PURE__*/_jsxs(\"p\", {\n                children: [\"$\", price]\n              })\n            })]\n          })\n        });\n      }\n    })\n  });\n}\n\nexport default ProductList;","map":{"version":3,"sources":["D:/Host/lovecamp/component/ProductList.js"],"names":["gql","useQuery","Card","ResourceList","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_ID","ProductList","loading","error","data","variables","ids","get","message","console","log","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","id","title"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,KAA7B,EAAoCC,SAApC,EAA+CC,SAA/C,QAAgE,kBAAhE;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,MAAMC,kBAAkB,GAAGR,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BA;;AA6BA,SAASS,WAAT,GAAuB;AAEnB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BX,QAAQ,CAACO,kBAAD,EAAqB;AAAEK,IAAAA,SAAS,EAAE;AAAEC,MAAAA,GAAG,EAAEP,KAAK,CAACQ,GAAN,CAAU,KAAV;AAAP;AAAb,GAArB,CAAzC;AAEA,MAAIL,OAAJ,EAAa,oBAAO;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA,cAAMA,KAAK,CAACK;AAAZ,IAAP;AAEXC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,IAArB;AACA,sBACG,KAAC,IAAD;AAAA,2BACI,KAAC,YAAD;AACC,MAAA,UAAU,MADX;AAEC,MAAA,YAAY,EAAE;AAAEO,QAAAA,QAAQ,EAAE,SAAZ;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OAFf;AAGC,MAAA,KAAK,EAAER,IAAI,CAACS,KAHb;AAIC,MAAA,UAAU,EAAEC,IAAI,IAAI;AAChB,cAAMC,KAAK,gBACP,KAAC,SAAD;AACI,UAAA,MAAM,EACFD,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IAAuBH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BC,WAAjD,GAA+D,EAFvE;AAII,UAAA,GAAG,EACCL,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IAAuBH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBG,OAA5C,GAAsD;AAL9D,UADJ;;AAUA,cAAMC,KAAK,GAAGP,IAAI,CAACQ,QAAL,CAAcL,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BG,KAA1C;AACA,4BACI,KAAC,YAAD,CAAc,IAAd;AACI,UAAA,EAAE,EAAEP,IAAI,CAACS,EADb;AAEI,UAAA,KAAK,EAAER,KAFX;AAGI,UAAA,kBAAkB,EAAG,oBAAmBD,IAAI,CAACU,KAAM,EAHvD;AAAA,iCAKI,MAAC,KAAD;AAAA,oCACI,KAAC,KAAD,CAAO,IAAP;AAAY,cAAA,IAAI,MAAhB;AAAA,qCACI;AAAA,uCACI,KAAC,SAAD;AAAW,kBAAA,SAAS,EAAC,QAArB;AAAA,4BACKV,IAAI,CAACU;AADV;AADJ;AADJ,cADJ,eAQI,KAAC,KAAD,CAAO,IAAP;AAAA,qCACI;AAAA,gCAAKH,KAAL;AAAA;AADJ,cARJ;AAAA;AALJ,UADJ;AAuBH;AAvCF;AADJ,IADH;AAgDH;;AAED,eAAepB,WAAf","sourcesContent":["import gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\r\nimport store from 'store-js';\r\n\r\nconst GET_PRODUCTS_BY_ID = gql`\r\nquery getProducts($ids: [ID!]!) {\r\n    nodes(ids: $ids) {\r\n        ... on Product {\r\n            title\r\n            handle\r\n          \tid\r\n            images(first: 1) {\r\n                edges {\r\n                    node {\r\n                        originalSrc\r\n                        altText\r\n                    }\r\n                }\r\n            }\r\n            variants(first: 1) {\r\n                edges {\r\n                    node {\r\n                        price\r\n                        id\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n`;\r\n\r\nfunction ProductList() {\r\n    \r\n    const { loading, error, data } = useQuery(GET_PRODUCTS_BY_ID, { variables: { ids: store.get('ids')}})\r\n\r\n    if (loading) return <div>Loading...</div>\r\n    if (error) return <div>{error.message}</div>\r\n\r\n    console.log('data:', data)\r\n    return (\r\n       <Card>\r\n           <ResourceList \r\n            showHeader\r\n            resourceName={{ singular: \"Product\", plural: \"Products\"}}\r\n            items={data.nodes}\r\n            renderItem={item => {\r\n                const media = (\r\n                    <Thumbnail \r\n                        source={\r\n                            item.images.edges[0] ? item.images.edges[0].node.originalSrc : \"\"\r\n                        }\r\n                        alt={\r\n                            item.images.edges[0] ? item.images.edges[0].altText : \"\"\r\n                        }     \r\n                    />\r\n                );\r\n                const price = item.variants.edges[0].node.price;\r\n                return (\r\n                    <ResourceList.Item \r\n                        id={item.id}\r\n                        media={media}\r\n                        accessibilityLabel={`View details for ${item.title}`}\r\n                    >\r\n                        <Stack>\r\n                            <Stack.Item fill>\r\n                                <h3>\r\n                                    <TextStyle variation=\"strong\">\r\n                                        {item.title}\r\n                                    </TextStyle>\r\n                                </h3>\r\n                            </Stack.Item>\r\n                            <Stack.Item>\r\n                                <p>${price}</p>\r\n                            </Stack.Item>\r\n\r\n                        </Stack>\r\n                    \r\n                    </ResourceList.Item>\r\n\r\n                )\r\n            }}\r\n            \r\n            />\r\n               \r\n           \r\n       </Card>\r\n    )\r\n}\r\n\r\nexport default ProductList;"]},"metadata":{},"sourceType":"module"}